import Mock from 'mockjs'
const random = Mock.Random

const articlesData = () => {
  const articles = []
  for (let i = 0; i < 25; i++) {
    const article = {
      'id': i,
      'title': random.ctitle(),
      'age': 18
    }
    articles.push(article)
  }
  const result = {
    'articles': articles
  }
  return result
}

const dropDownData = () => {
  const datas = []
  for (let i = 0; i < 4; i++) {
    const data = {
      'tag': random.ctitle(),
      'counts': 10,
      'childs': [
        { 'tag': random.ctitle(), 'counts': 2 },
        { 'tag': random.ctitle(), 'counts': 3 },
        { 'tag': random.ctitle(), 'counts': 1 }
      ]
    }
    datas.push(data)
  }
  return datas
}

const blogData = () => {
  const blog = {
    'title': 'Jenkins使用方式',
    'publish': '20210130',
    'tag': '运维',
    'content': '# Jekins的使用方式\n\n## 1. 什么是Jenkins？\n\nJenkins是一个**开源的**、提供友好操作界面的持续集成(CI)工具，起源于Hudson（Hudson是商用的）\n\n## 2. 主要用于持续\n\n自动的构建/测试软件项目、监控外部任务的运行（这个比较抽象，暂且写上，不做解释）。Jenkins用Java语言编写，可在Tomcat等流行的servlet容器中运行，也可独立运行。通常与版本管理工具(SCM)、构建工具结合使用。常用的版本控制工具有SVN、GIT，构建工具有Maven、Ant、Gradle\n\n#### 2. CI/CD是什么\n\nCI(Continuous integration，中文意思是持续集成)是一种软件开发时间。持续集成强调开发人员提交了新代码之后，立刻进行构建、（单元）测试。根据测试结果，我们可以确定新代码和原有代码能否正确地集成在一起。借用网络图片对CI加以理解\n\nCD(Continuous Delivery， 中文意思持续交付)是在持续集成的基础上，将集成后的代码部署到更贴近真实运行环境(类生产环境)中。比如，我们完成单元测试后，可以把代码部署到连接数据库的Staging环境中更多的测试。如果代码没有问题，可以继续手动部署到生产环境。下图反应的是CI/CD 的大概工作模式\n\n![me](https://picsum.photos/200/300)\n\n## 3.使用Jenkins进行PHP代码(单元)测试、打包\n\nJenkins是一个强大的CI工具，虽然本身使用Java开发，但也能用来做其他语言开发的项目CI。下面讲解如何使用Jenkins创建一个构建任务。跳转到如下界面。任务名称可以自行设定，但需要全局唯一。输入名称后选择构建一个自由风格的软件项目(其他选项不作介绍)。并点击下方的确定按钮即创建了一个构建任务。之后会自动跳转到该job的配置页面下图是构建任务设置界面，可以看到上方的几个选项"General", "源码管理"， "构建触发器"，"构建环境"， "构建"， "构建后操作"。下面逐一介绍\n# 项目名称\n## ShareBlog\n是刚才创建构建任务步骤设置的，当然在这里也可以更改。服务器资源是有限的，有时候保存了太多的历史构建，会导致Jenkins速度变慢，并且服务器硬盘资源也会被占满。当然下方的"保持构建天数" 和 保持构建的最大个数是可以自定义的，需要根据实际情况确定一个合理的值'
  }
  return blog;
}

const result = () => {
  const data = []
  for (let i = 0; i < 5; i++) {
    data.push(random.ctitle())    
  }
  return data;
}

const linkData = () => {
  const data = []
  const bili = {svg: '<svg t="1613266865858" class="icon" viewBox="0 0 1069 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2438" width="42" height="42"><path d="M868.93 171.112H697.817l77.535-77.535c13.369-13.368 13.369-32.084 0-45.452s-32.083-13.368-45.451 0L598.893 179.133H470.559L339.55 48.125c-10.695-13.368-26.736-16.041-42.778-8.02-2.674 0-2.674 2.673-5.347 5.347-13.369 13.368-13.369 32.083 0 45.451l80.208 80.21H200.522c-93.577 0-171.112 77.535-171.112 171.112v425.107c0 90.903 77.535 168.438 171.112 168.438h26.736c0 32.084 26.737 56.146 56.147 56.146s56.146-26.736 56.146-56.146h395.697c2.674 32.084 29.41 56.146 61.494 53.473 29.41-2.674 50.798-24.063 53.472-53.473h21.39c93.576 0 171.111-77.535 171.111-171.112V339.551c-2.673-93.577-80.208-168.439-173.785-168.439zM863.582 831.5H211.217c-34.757 0-61.494-29.41-64.167-64.167l-2.674-433.128c0-34.758 29.41-64.167 64.167-64.167H860.91c34.757 0 61.493 29.41 64.167 64.167l2.673 433.128c-2.673 37.43-29.41 64.167-64.167 64.167z" fill="#fb77b4" p-id="2439"></path><path d="M422.433 417.086l16.042 80.209-213.89 40.104-16.042-80.208 213.89-40.105z m205.87 80.209l16.042-80.209 213.89 40.105-16.042 80.208-213.89-40.104z m42.778 168.439c0 2.673 0 8.02-2.674 10.694-13.368 29.41-42.778 48.126-77.535 50.8-21.389 0-42.778-10.695-56.146-26.737-16.042 16.042-34.757 26.736-56.146 26.736-32.084-2.673-61.494-21.389-77.536-50.799 0-2.673-2.673-5.347-2.673-10.694 0-10.695 8.02-18.716 18.715-21.39h2.674c8.02 0 13.368 2.674 16.042 10.695 0 0 21.389 29.41 40.104 29.41 37.43 0 37.43-32.083 58.82-56.146 24.063 26.736 24.063 56.146 58.82 56.146 24.062 0 40.104-29.41 40.104-29.41 2.674-5.347 10.695-10.694 16.042-10.694 10.694-2.674 18.715 5.347 21.389 16.041v5.348z" fill="#fb77b4" p-id="2440"></path></svg>', url: 'https://www.bilibili.com/', title: '哔哩哔哩 (゜-゜)つロ 干杯~-bilibili'}
  data.push(bili)
  const juejin = {svg: '<svg t="1613268698409" class="icon" viewBox="0 0 1272 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1971" width="48" height="48"><path d="M729.64116345 165.27693991L634.32650881 90.125l-99.5625 78.52693991-5.17887981 4.16056009 104.74137981 83.50215546 105.09051682-83.50215546-9.77586218-7.53556009z m361.21228445 291.47198236l-456.78879245 360.19396555-456.49784537-359.99030128L110.125 511.12715547l523.93965546 413.11745671 524.23060335-413.35021555-67.44181091-54.14547436z m-456.78879245 29.21120673L385.4784479 290.00646554 318.06573237 344.12284454l315.96982771 249.16810336 316.28987101-249.40086136-67.41271555-54.14547436-248.84806008 196.21551682z" fill="#006cff" p-id="1972"></path></svg>', url: 'https://juejin.im/', title: '掘金-代码不止，掘金不停'}
  data.push(juejin)
  const koutu = {svg: '<svg t="1613269106573" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2743" width="30" height="30"><path d="M1023.289061 916.746525c-0.127902 4.988186-0.639511 9.912421-1.406924 14.900607l-0.831364 5.24399a115.751495 115.751495 0 0 1-5.435844 18.737673 113.70506 113.70506 0 0 1-8.761301 17.138896c-0.959267 1.598778-2.046435 3.069653-3.069653 4.604479-2.685946 3.964968-5.627697 7.674132-8.761301 11.191443-0.767413 0.895315-1.342973 1.918533-2.174337 2.749897-0.511609 0.57556-1.15112 0.895315-1.662729 1.470876-4.476577 4.476577-9.208959 8.69735-14.388998 12.342562-0.895315 0.639511-1.918533 1.087169-2.813848 1.662729a96.949871 96.949871 0 0 1-13.365781 7.354377c-2.046435 0.959267-4.092871 1.72668-6.203257 2.558044-3.773115 1.406924-7.674132 2.621995-11.575149 3.581261-2.110386 0.511609-4.156822 1.15112-6.331159 1.534827a103.153128 103.153128 0 0 1-38.30671-0.383707c-1.215071-0.255804-2.366191-0.767413-3.581262-1.087168a99.380013 99.380013 0 0 1-15.859873-5.052138c-2.494093-1.087169-4.66843-2.621995-7.034622-3.901017-3.709164-1.918533-7.54623-3.709164-11.06354-6.203257a103.728688 103.728688 0 0 1-16.179629-13.877389L458.153172 608.758017l1.023218-1.279022-132.570635-132.059025a114.088766 114.088766 0 0 1 0.319756-155.529081 101.426448 101.426448 0 0 1 148.110752-0.255804l517.812074 515.957492c4.476577 4.732382 8.377594 9.84847 11.894905 15.220362 1.023218 1.534826 1.854582 3.069653 2.813848 4.66843 2.430142 4.156822 4.66843 8.441545 6.523013 12.854172l2.110386 4.988186a115.111984 115.111984 0 0 1 7.226474 38.050906l0.191854 2.110386c0 1.087169-0.319756 2.174337-0.319756 3.261506zM455.595128 340.035486a74.950692 74.950692 0 0 0-109.548238 0 84.351504 84.351504 0 0 0 0 114.984082l130.971857 130.460248 100.595084-123.873284-122.018703-121.571046z m325.894816 142.930714c0-125.599965-96.438262-227.47407-215.323361-227.474071 118.885099 0 215.323361-101.810155 215.323361-227.47407 0 125.663916 96.438262 227.47407 215.387312 227.47407-118.94905 0-215.387312 101.874106-215.387312 227.474071z m-579.205131-67.788169c0-114.536424-90.362907-207.393424-201.89363-207.393424 111.530722 0 201.893629-92.857 201.89363-207.393424 0 114.536424 90.362907 207.393424 201.893629 207.393424-111.530722 0-201.893629 92.857-201.893629 207.393424z m67.404461 96.88592c0 141.140082 108.333167 255.612555 241.99097 255.612555-133.657803 0-241.99097 114.472473-241.99097 255.612555 0-141.140082-108.52502-255.612555-241.99097-255.612555 133.657803 0 241.99097-114.472473 241.99097-255.612555z" fill="#1296db" p-id="2744"></path></svg>', url: 'https://koutu.gaoding.com/', title: '【抠图】在线抠图软件-稿定设计'}
  data.push(koutu)
  const paint = {svg: '<svg t="1613269789014" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4505" width="48" height="48"><path d="M849.730443 434.672844c-13.992689-29.840632-30.912034-57.279564-50.089815-82.291215-13.104459 11.903098-26.646893 23.99346-40.559764 36.21583-54.199413 47.62774-132.333958 118.256334-136.161123 127.786385-3.828188 9.531074-26.640754 93.291756-154.520259 126.32408-29.55513 5.832845-74.740238 40.067554-84.077907 31.627325-20.073174-13.080923 0.726547-98.823749 17.540492-135.651516 16.807804-36.823674 55.587016-99.636255 87.089497-104.83772 31.504528-5.203512 113.736391-78.360695 175.846984-132.938732 14.935154-13.122879 29.673833-25.866111 44.148499-38.133505C570.475298 158.402683 387.455961 135.222751 283.121707 199.500707c-147.729599 91.010807-162.138774 304.537971-32.188096 476.927203 129.949654 172.388209 387.704113 235.606019 539.342742 145.446603 33.766035-18.581194-39.804565-142.281517-39.640836-200.074781C750.803339 564.007491 876.525716 489.74923 849.730443 434.672844zM482.084155 205.561749c38.782282 0 70.223365 28.423353 70.223365 63.48387 0 35.06154-31.441083 63.484893-70.223365 63.484893s-70.223365-28.423353-70.223365-63.484893C411.86079 233.985102 443.301873 205.561749 482.084155 205.561749zM275.648502 475.520157c-38.782282 0-70.222341-28.423353-70.222341-63.484893s31.44006-63.484893 70.222341-63.484893c38.783305 0 70.225411 28.423353 70.225411 63.484893S314.431807 475.520157 275.648502 475.520157zM638.461715 807.297516c-38.784328 0-70.219271-28.4254-70.219271-63.481823 0-35.063587 31.434943-63.487963 70.219271-63.487963 38.786375 0 70.230528 28.424376 70.230528 63.487963C708.692243 778.872117 677.24809 807.297516 638.461715 807.297516z" p-id="4506" fill="#1296db"></path><path d="M607.433024 462.140429l-19.449981-17.083074c-10.682293-9.373485-27.418466-8.755408-37.214577 1.373277 0 0-12.163017 12.580526-23.430642 28.15934-6.665817-0.487094-14.134929 0.013303-22.479991 1.922792-51.034327 11.678994-68.912509 60.975746-68.912509 60.975746s-24.99937 81.452103-11.656481 90.14816c6.205329 5.610788 28.854165-24.146956 48.496527-28.021194 96.417957-24.90625 105.10071-65.897849 103.604636-84.408435 16.827247-9.756201 29.983895-20.036335 29.983895-20.036335C617.633341 486.375389 618.111225 471.511867 607.433024 462.140429z" p-id="4507" fill="#1296db"></path><path d="M858.661859 216.195947c-21.023826-19.001773-158.101831 83.532485-252.27977 166.293397-11.500938 10.103102-14.2127 12.482289-14.2127 12.482289-10.68127 9.358135-10.69355 24.682146-0.024559 34.053584l25.910113 22.747073c10.671037 9.371438 28.061103 9.30697 38.649252-0.145309 0 0 1.478677-1.322112 12.33698-10.863419C763.223207 358.006743 880.108311 235.58453 858.661859 216.195947z" p-id="4508" fill="#1296db"></path></svg>', url: 'https://flatuicolors.com/palette/gb', title: 'Flat UI Colors 2 - 14 Color Palettes, 280 colors 🎨'}
  data.push(paint)
  const translate = {svg: '<svg t="1613270714959" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="12258" width="48" height="48"><path d="M958.136 192h-432.64l-45.03 174.2-16.166 114.484 86.658 241.69 13.914 293.278h393.266c36.368 0 65.864-29.496 65.864-65.864V257.864C1024 221.496 994.504 192 958.136 192z" fill="#E6E6E6" p-id="12259"></path><path d="M737.392 832l-172.522 183.652L503.764 832l24.932-66.958z" fill="#3A5BBC" p-id="12260"></path><path d="M939.13 488.348v-41.74h-158.608v-58.434h-41.74v58.434H595.84v41.74h231.78c-12.892 27.144-35.242 70.43-65.956 116.07-28.264-35.298-46.124-59.862-46.336-60.154l-12.258-16.89-33.784 24.51 12.254 16.89c0.954 1.316 21.752 29.926 54.676 70.6-22.444 27.498-63.616 72.212-85.31 93.904l29.512 29.512c18.724-18.724 57.548-60.428 82.852-90.654 32.918 39.106 65.046 74.388 95.708 105.052l14.756 14.756 29.516-29.51-14.756-14.756C856.816 716 823.456 679.15 789.2 638.08c44.266-63.646 72.96-123.912 84.4-149.732h65.53z" fill="#808080" p-id="12261"></path><path d="M698.658 715.046L737.392 832H65.864C29.468 832 0 802.504 0 766.136V74.212C0 37.844 29.468 8.348 65.864 8.348h398.832L525.496 192l91.214 275.478 81.948 247.568z" fill="#518EF8" p-id="12262"></path><path d="M298.602 574.748c-85.54 0-155.13-69.59-155.13-155.13s69.59-155.13 155.13-155.13c41.408 0 80.364 16.13 109.69 45.424l-29.498 29.532c-21.446-21.42-49.922-33.216-80.194-33.216-62.526 0-113.392 50.866-113.392 113.392s50.866 113.392 113.392 113.392c55.396 0 101.64-39.934 111.466-92.522h-111.462v-41.74h155.13v20.87c-0.002 85.538-69.592 155.128-155.132 155.128z" fill="#FFFFFF" p-id="12263"></path></svg>', url: 'https://translate.google.cn/?hl=zh-CN&tab=TT', title: '谷歌翻译'}
  data.push(translate)
  const picture = {svg: '<svg t="1613270856407" class="icon" viewBox="0 0 1083 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="13050" width="48" height="48"><path d="M163.246 430.377a311.652 311.652 0 1 0 623.305 0 311.652 311.652 0 1 0-623.305 0z" fill="#E9EAEB" p-id="13051"></path><path d="M400.696 252.29h563.942v400.696H400.696z" fill="#FFFFFF" p-id="13052"></path><path d="M118.725 371.014h563.942V771.71H118.725z" fill="#FFFFFF" p-id="13053"></path><path d="M979.478 667.826H860.754v-29.681h89.043V267.13h-534.26v59.363h-29.682v-89.044h593.623z" fill="#2A5082" p-id="13054"></path><path d="M222.609 786.55H103.884V356.175h593.623v89.043h-29.68v-59.362H133.564V756.87h89.044z" fill="#2A5082" p-id="13055"></path><path d="M267.13 489.74h549.102v400.695H267.13z" fill="#FFFFFF" p-id="13056"></path><path d="M831.072 905.275H252.29V474.9h578.782v430.376z m-549.101-29.68h519.42V504.58h-519.42v371.014z" fill="#2A5082" p-id="13057"></path><path d="M638.145 608.464a44.522 44.522 0 1 0 89.043 0 44.522 44.522 0 1 0-89.043 0z" fill="#A3D4FF" p-id="13058"></path><path d="M682.667 667.826c-32.65 0-59.363-26.713-59.363-59.362s26.713-59.363 59.363-59.363 59.362 26.713 59.362 59.363-26.713 59.362-59.362 59.362z m0-89.043c-16.325 0-29.681 13.356-29.681 29.68s13.356 29.682 29.68 29.682 29.682-13.357 29.682-29.681-13.357-29.681-29.681-29.681z" fill="#2A5082" p-id="13059"></path><path d="M623.304 712.348l-51.942 51.942-111.304-111.304L267.13 845.913v44.522h534.261z" fill="#A3D4FF" p-id="13060"></path><path d="M837.009 905.275h-584.72v-65.298l207.769-207.768 111.304 111.304 51.942-51.942L837.01 905.275z m-555.038-29.68h483.803l-142.47-142.47-31.165 31.165 41.554 41.553-20.777 20.777-152.858-152.858L281.971 851.85v23.745z" fill="#2A5082" p-id="13061"></path></svg>', url: 'https://wallhaven.cc/', title: 'iconfont-阿里巴巴矢量图标库'}
  data.push(picture)
  const alibaba = {svg: '<svg t="1613271342545" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="21831" width="48" height="48"><path d="M944.697458 223.744L552.960569 10.808889a88.746667 88.746667 0 0 0-84.764445 0L76.345458 223.857778A92.728889 92.728889 0 0 0 28.445013 305.550222v413.013334c0 34.247111 18.432 65.649778 48.014223 81.692444l391.68 212.935111a88.632889 88.632889 0 0 0 84.821333 0l391.736889-213.048889c29.525333-16.042667 47.957333-47.445333 47.957333-81.692444v-413.013334c0-34.247111-18.432-65.649778-47.957333-81.692444z m-464.270222 499.427556c0 16.554667-13.596444 30.151111-30.151112 30.151111H269.483236a30.208 30.208 0 0 1-30.151112-30.151111V542.378667c0-16.554667 13.653333-30.151111 30.151112-30.151111h180.792888c16.611556 0 30.151111 13.596444 30.151112 30.151111v180.792889z m271.189333 0c0 16.554667-13.596444 30.151111-30.151111 30.151111H540.672569a30.208 30.208 0 0 1-30.151111-30.151111V542.378667c0-16.554667 13.653333-30.151111 30.151111-30.151111h180.792889c16.554667 0 30.151111 13.596444 30.151111 30.151111v180.792889z m0-271.189334c0 16.554667-13.596444 30.151111-30.151111 30.151111H540.672569a30.208 30.208 0 0 1-30.151111-30.151111V271.189333c0-16.554667 13.653333-30.151111 30.151111-30.151111h180.792889c16.554667 0 30.151111 13.596444 30.151111 30.151111v180.792889z" fill="#4E779C" p-id="21832"></path></svg>', url: 'https://www.iconfont.cn/', title: 'iconfont-阿里巴巴矢量图标库'}
  data.push(alibaba)
  return data
}




Mock.mock('/test', 'get', articlesData)
Mock.mock('/tag', 'get', dropDownData)
Mock.mock('/blog', 'get', blogData)
Mock.mock('/search', 'post', result)
Mock.mock('/getLinks', 'get', linkData)